server:
  port: 8090
    
#eureka:
#  instance:
#    instance-id: ${spring.application.name}:${random.value} 
#  client:
#    service-url:
#      defaultZone: http://localhost:5001/eureka

spring:
  application:
    name: ctBikePesquisa
  cloud:
    kubernetes:
      discovery:
        enabled: true
        service-name: ctBikePesquisa
      config:
        enabled: true
        sources:
          - namespace: default
            name: ctBikePesquisa
      reload:
        enabled: false
  jackson:
    time-zone: America/Sao_Paulo
  datasource:
    #driver-class-name: com.mysql.jdbc.Driver
    url: ${SECRET_MYSQL_DATABASE:jdbc:mysql://127.0.0.1:3306/test}
    username: ${SECRET_MYSQL_USER:root}
    password: ${SECRET_MYSQL_PASSWORD:}
    #hikari:
    #  schema: PNM_USU_INTERNO
  jpa:
#    generate-ddl: true
    generate-ddl: true
    database-platform: org.hibernate.dialect.MariaDBDialect
    #database-platform: org.hibernate.dialect.MySQ5LDialect
    show-sql: true
    hibernate:
      ddl-auto: create
      #ddl-auto: none
logging:
  level:
    org:
      springframework:
        jdbc:
          core:
            JdbcTemplate: trace
    com:
      zaxxer:
        hikari:
          HikariConfig: DEBUG
management:
  endpoint:
    beans:
      enabled: true
    restart:
      enabled: true
    health:
      show-details: always
      enabled: true
      group:
        liveness:
          include: ping
          show-details: never
        readiness:
          include: "*"
          show-details: never
    info:
      enabled: true

  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: health,liveness,readiness      
          
    
#H2
#  h2:
#    console:
#      enabled: true
#  datasource:
#    driver-class-name: org.h2.Driver
#    url: jdbc:h2:mem:testdb
#    username: sa
#    password: sa
#  jpa:
#    database-platform: org.hibernate.dialect.H2Dialect
    
#  cloud:
#    stream:
#      bindings:
#       cargoBookingChannel:
#         destination: cargoBookings          
#          binder: rabbit
#        cargoRoutingChannel:
#          destination: cargoRoutings         
#          binder: rabbit
#        cargoHandlingChannel:
#          destination: cargoHandling
#          group: cargoHandlingInBookingQueue
#          binder: rabbit
#      binders:
#        rabbit:
#          type: rabbit
#          environment:
#            spring:
#              rabbitmq:
#                host: localhost
#                port: 5672
#                username: guest
#                password: guest

